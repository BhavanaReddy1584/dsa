/*
Problem Description :
You are given a string A of size N.
Return the string A after reversing the string word by word.

NOTE:
A sequence of non-space characters constitutes a word.
Your reversed string should not contain leading or trailing spaces, even if it is present in the input string.
If there are multiple spaces between words, reduce them to a single space in the reversed string.

Problem Constraints
1 <= N <= 3 * 105

Input Format
The only argument given is string A.

Output Format
Return the string A after reversing the string word by word.

Example Input
Input 1:
A = "the sky is blue"
Input 2:
A = "this is ib"

Example Output
Output 1:
"blue is sky the"
Output 2:
"ib is this"    

Example Explanation
Explanation 1:
We reverse the string word by word so the string becomes "blue is sky the".
Explanation 2:
We reverse the string word by word so the string becomes "ib is this".                      */

// code: 
public class Solution {
    public String solve(String A) {
        // converting string to an array of words seperated by spaces
        // String str[] = A.split(" "); => this doesn't make 2 spaces as 1 space in output
        
        // Trim the input string to remove leading and trailing spaces
        // Split by one or more spaces
        String[] str = A.trim().split(" +"); // trims extra white spaces
        int n = str.length;
        for(int i =0; i< n/2; i++){
            String temp = str[i];
            str[i] = str[n-i-1];
            str[n-i-1] = temp;
        }
        // joining the reversed array of words with spaces
        String ans = String.join(" ", str);
        return ans;
    }
}

// code 2 :
/*
public class Solution {
    public String solve(String A) {
        String a[]=A.split(" ");
         int n=a.length;
         int i=0;
         int j=n-1;
         while(i<j){
             String temp=a[i];
             a[i]=a[j];
             a[j]=temp;
             i++;
             j--;
         }
        String s=String.join(" ",a);
        return s;
    }
}
*/
